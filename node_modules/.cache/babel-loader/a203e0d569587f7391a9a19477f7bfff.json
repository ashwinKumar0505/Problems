{"ast":null,"code":"var _jsxFileName = \"/home/codebrahma/problems/Problems/src/problem2/GitRepo.js\";\nimport React, { Component } from 'react';\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\n\nclass GitRepo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      repoName: \"\",\n      repos: [],\n      HasRepo: false\n    };\n\n    this.changeUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.changeRepo = event => {\n      this.setState({\n        repoName: event.target.value\n      });\n    };\n\n    this.searchUser = () => {\n      const requestUrl = \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n      console.log(requestUrl);\n      fetch(requestUrl).then(res => res.json()).then(json => {\n        this.setState({\n          repos: json,\n          HasRepo: true\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.userName);\n    console.log(this.state.repoName);\n\n    if (this.state.HasRepo) {\n      let arr = this.state.repos.map(repo => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, repo.name);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Search, {\n      changeUser: this.changeUser,\n      changeRepo: this.changeRepo,\n      searchUser: this.searchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), arr);\n  }\n\n}\n\nexport default GitRepo;","map":{"version":3,"sources":["/home/codebrahma/problems/Problems/src/problem2/GitRepo.js"],"names":["React","Component","classes","Search","GitRepo","state","userName","repoName","repos","HasRepo","changeUser","event","setState","target","value","changeRepo","searchUser","requestUrl","console","log","fetch","then","res","json","render","arr","map","repo","name","Container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACxB;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,QAAQ,EAAC,EAFL;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,OAAO,EAAC;AAJJ,KADwB;;AAAA,SAO9BC,UAP8B,GAOlBC,KAAD,IAAS;AACjB,WAAKC,QAAL,CACE;AACEN,QAAAA,QAAQ,EAACK,KAAK,CAACE,MAAN,CAAaC;AADxB,OADF;AAKF,KAb6B;;AAAA,SAc9BC,UAd8B,GAclBJ,KAAD,IAAS;AAClB,WAAKC,QAAL,CACE;AACEL,QAAAA,QAAQ,EAACI,KAAK,CAACE,MAAN,CAAaC;AADxB,OADF;AAKD,KApB6B;;AAAA,SAqB9BE,UArB8B,GAqBnB,MAAI;AACb,YAAMC,UAAU,GAAC,kCAAgC,KAAKZ,KAAL,CAAWC,QAA3C,GAAoD,QAArE;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAG,MAAAA,KAAK,CAACH,UAAD,CAAL,CACII,IADJ,CACSC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADf,EAEIF,IAFJ,CAESE,IAAI,IAAG;AACX,aAAKX,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAACe,IADM;AAEZd,UAAAA,OAAO,EAAC;AAFI,SAAd;AAID,OAPJ;AAQD,KAhC6B;AAAA;;AAiC9Be,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,QAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,QAAvB;;AACA,QAAG,KAAKF,KAAL,CAAWI,OAAd,EACA;AACE,UAAIgB,GAAG,GAAC,KAAKpB,KAAL,CAAWG,KAAX,CAAiBkB,GAAjB,CAAsBC,IAAD,IAAQ;AACnC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,IAAI,CAACC,IAAT,CAAR;AACD,OAFO,CAAR;AAGD;;AACD,WACE;AAAK,MAAA,SAAS,EAAE1B,OAAO,CAAC2B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKnB,UAAzB;AAAqC,MAAA,UAAU,EAAE,KAAKK,UAAtD;AAAkE,MAAA,UAAU,EAAE,KAAKC,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEMS,GAFN,CADF;AAOD;;AAjD6B;;AAoDhC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from \"./GitRepo.module.css\"\nimport Search from \"./Search\"\nclass GitRepo extends Component {\n  state={\n    userName:\"\",\n    repoName:\"\",\n    repos:[],\n    HasRepo:false\n  }\n  changeUser=(event)=>{\n     this.setState(\n       {\n         userName:event.target.value\n       }\n     )\n  }\n  changeRepo=(event)=>{\n    this.setState(\n      {\n        repoName:event.target.value\n      }\n    )\n  }\n  searchUser=()=>{\n    const requestUrl=\"https://api.github.com/users/\"+this.state.userName+\"/repos\";\n    console.log(requestUrl)\n    fetch(requestUrl)\n       .then(res =>res.json())\n       .then(json =>{\n         this.setState({\n           repos:json,\n           HasRepo:true\n         })\n       })\n  }\n  render() { \n    console.log(this.state.userName)\n    console.log(this.state.repoName)\n    if(this.state.HasRepo)\n    {\n      let arr=this.state.repos.map((repo)=>{\n        return (<p>{repo.name}</p>)\n      })\n    }\n    return ( \n      <div className={classes.Container}>\n          <Search changeUser={this.changeUser} changeRepo={this.changeRepo} searchUser={this.searchUser}/>\n           {arr}\n      </div>\n\n     );\n  }\n}\n \nexport default GitRepo;"]},"metadata":{},"sourceType":"module"}