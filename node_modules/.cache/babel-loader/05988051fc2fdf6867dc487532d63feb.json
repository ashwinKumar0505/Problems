{"ast":null,"code":"var _jsxFileName = \"/home/codebrahma/problems/Problems/src/problem2/GitRepo.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\n\nclass GitRepo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      repoName: \"\",\n      repos: [],\n      HasRepo: false,\n      shouldClearRepo: false,\n      shouldFilterRepo: false\n    };\n\n    this.changeUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.changeRepo = event => {\n      this.setState({\n        repoName: event.target.value\n      });\n    };\n\n    this.searchUser = () => {\n      const requestUrl = \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n      fetch(requestUrl).then(res => res.json()).then(json => {\n        this.setState({\n          repos: json,\n          HasRepo: true,\n          shouldClearRepo: false,\n          shouldFilterRepo: false\n        });\n      });\n    };\n\n    this.clearUser = () => {\n      this.setState({\n        userName: \"\",\n        shouldClearRepo: true,\n        HasRepo: false,\n        shouldFilterRepo: false\n      });\n    };\n\n    this.FilterRepo = () => {\n      this.setState({\n        shouldClearRepo: false,\n        HasRepo: false,\n        shouldFilterRepo: true\n      });\n    };\n  }\n\n  render() {\n    let DisplayRepo = \"\";\n\n    if (this.state.HasRepo) {\n      DisplayRepo = this.state.repos.map(repo => {\n        return React.createElement(\"p\", {\n          className: classes.displayRepo,\n          key: repo.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, repo.name);\n      });\n    }\n\n    if (this.state.shouldClearRepo) {\n      DisplayRepo = null;\n    }\n\n    if (this.state.shouldFilterRepo) {\n      let filter = this.state.repoName;\n      DisplayRepo = this.state.repos.map(repo => {\n        if (repo.includes(filter)) {\n          return React.createElement(\"p\", {\n            className: classes.displayRepo,\n            key: repo.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, repo.name);\n        } else {\n          return null;\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Search, {\n      userName: this.state.userName,\n      changeUser: this.changeUser,\n      changeRepo: this.changeRepo,\n      searchUser: this.searchUser,\n      clearUser: this.clearUser,\n      FilterRepo: this.FilterRepo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), DisplayRepo);\n  }\n\n}\n\nexport default GitRepo;","map":{"version":3,"sources":["/home/codebrahma/problems/Problems/src/problem2/GitRepo.js"],"names":["React","Component","classes","Search","GitRepo","state","userName","repoName","repos","HasRepo","shouldClearRepo","shouldFilterRepo","changeUser","event","setState","target","value","changeRepo","searchUser","requestUrl","fetch","then","res","json","clearUser","FilterRepo","render","DisplayRepo","map","repo","displayRepo","name","filter","includes","Container"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\nclass GitRepo extends Component {\n  state = {\n    userName: \"\",\n    repoName: \"\",\n    repos: [],\n    HasRepo: false,\n    shouldClearRepo:false,\n    shouldFilterRepo:false\n  };\n  changeUser = event => {\n    this.setState({\n      userName: event.target.value,\n    });\n  };\n  changeRepo = event => {\n    this.setState({\n      repoName: event.target.value,\n    });\n  };\n  searchUser = () => {\n    const requestUrl =\n      \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n    fetch(requestUrl)\n      .then(res =>res.json())\n      .then(json => {\n        this.setState({\n          repos: json,\n          HasRepo: true,\n          shouldClearRepo:false,\n          shouldFilterRepo:false\n        });\n      });\n  }\n  clearUser=()=>{\n    this.setState({\n      userName:\"\",\n      shouldClearRepo:true,\n      HasRepo:false,\n      shouldFilterRepo:false\n    })\n  }\n  FilterRepo=()=>{\n     this.setState({\n      shouldClearRepo:false,\n      HasRepo:false,\n      shouldFilterRepo:true  \n     })\n  }\n  render() {\n    let DisplayRepo = \"\";\n    if (this.state.HasRepo) {\n      DisplayRepo = this.state.repos.map(repo => {\n        return <p className={classes.displayRepo} key={repo.name}>{repo.name}</p>;\n      });\n    }\n    if(this.state.shouldClearRepo){\n          DisplayRepo=null;\n    }\n    if(this.state.shouldFilterRepo){\n      let filter=this.state.repoName;\n      DisplayRepo=this.state.repos.map(repo=>{\n        if(repo.includes(filter)){\n          return <p className={classes.displayRepo} key={repo.name}>{repo.name}</p>;\n        }\n        else{\n          return null;\n        }\n      })\n    }\n    return (\n      <div className={classes.Container}>\n        <Search\n          userName={this.state.userName}\n          changeUser={this.changeUser}\n          changeRepo={this.changeRepo}\n          searchUser={this.searchUser}\n          clearUser={this.clearUser}\n          FilterRepo={this.FilterRepo}\n        />\n        {DisplayRepo}\n      </div>\n    );\n  }\n}\n\nexport default GitRepo;\n"]},"metadata":{},"sourceType":"module"}