{"ast":null,"code":"var _jsxFileName = \"/home/codebrahma/problems/Problems/src/problem2/GitRepo.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\n\nclass GitRepo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      repoName: \"\",\n      repos: [],\n      repoNames: [],\n      HasRepo: false,\n      shouldClearRepo: false,\n      shouldFilterRepo: false,\n      userNotFound: false\n    };\n\n    this.changeUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.searchUser = () => {\n      const requestUrl = \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n      fetch(requestUrl).then(res => res.json()).then(json => {\n        this.setState({\n          repos: json\n        });\n\n        if (this.state.repos.message === \"Not Found\") {\n          this.setState({\n            HasRepo: false,\n            shouldClearRepo: false,\n            shouldFilterRepo: false,\n            userNotFound: true\n          });\n          return;\n        }\n\n        let repoNames = this.state.repos.map(repo => {\n          return repo.name;\n        });\n        this.setState({\n          repoNames: repoNames,\n          HasRepo: true,\n          shouldClearRepo: false,\n          shouldFilterRepo: false,\n          userNotFound: false\n        });\n      });\n    };\n\n    this.clearUser = () => {\n      this.setState({\n        userName: \"\",\n        repoNames: [],\n        shouldClearRepo: true,\n        HasRepo: false,\n        shouldFilterRepo: false,\n        userNotFound: false\n      });\n    };\n\n    this.filterRepo = event => {\n      if (event.target.value === \"\") {\n        this.setState({\n          repoName: event.target.value,\n          shouldClearRepo: false,\n          HasRepo: true,\n          shouldFilterRepo: false,\n          userNotFound: false\n        });\n      } else {\n        this.setState({\n          repoName: event.target.value,\n          shouldClearRepo: false,\n          HasRepo: false,\n          shouldFilterRepo: true,\n          userNotFound: false\n        });\n      }\n    };\n\n    this.clearFilter = () => {\n      this.setState({\n        repoName: \"\",\n        shouldClearRepo: false,\n        HasRepo: true,\n        shouldFilterRepo: true,\n        userNotFound: false\n      });\n    };\n\n    this.enterKeyPress = event => {\n      if (event.keyCode === 13 || event.which === 13) {\n        console.log('here');\n        this.searchUser();\n      }\n    };\n  }\n\n  render() {\n    let DisplayRepo = \"\";\n\n    if (this.state.HasRepo) {\n      //Displaying the repos\n      DisplayRepo = this.state.repoNames.map(repo => {\n        return React.createElement(\"p\", {\n          className: classes.displayRepo,\n          key: repo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, repo);\n      });\n    }\n\n    if (this.state.shouldClearRepo) {\n      //clearing the repos\n      DisplayRepo = null;\n    }\n\n    if (this.state.userNotFound) {\n      //If userName does not exits\n      DisplayRepo = React.createElement(\"p\", {\n        className: classes.wrongUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"No UserName Exits in This Name\");\n    }\n\n    if (this.state.shouldFilterRepo) {\n      //Filtering the repos\n      let filter = this.state.repoName;\n      DisplayRepo = this.state.repoNames.map(repo => {\n        if (repo.includes(filter)) {\n          let Display = \"\";\n          let regrex = new RegExp(filter, \"g\");\n          let indices = [],\n              result;\n\n          while (result = regrex.exec(repo)) {\n            indices.push(result.index);\n          }\n\n          let i = 0,\n              j = filter.length;\n\n          for (i; i < repo.length;) {\n            console.log(indices);\n\n            if (indices.includes(i)) {\n              Display = [Display, React.createElement(\"span\", {\n                style: {\n                  backgroundColor: \"green\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129\n                },\n                __self: this\n              }, repo.substring(i, i + j))];\n              i = i + j;\n            } else {\n              Display = [Display, React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133\n                },\n                __self: this\n              }, repo[i])];\n              i = i + 1;\n            }\n          }\n\n          return React.createElement(\"div\", {\n            style: {\n              backgroundColor: \"green\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, Display);\n        } else {\n          return null;\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Git Repository\"), React.createElement(\"div\", {\n      className: classes.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Search, {\n      userName: this.state.userName,\n      repoName: this.state.repoName,\n      changeUser: this.changeUser,\n      searchUser: this.searchUser,\n      clearUser: this.clearUser,\n      filterRepo: this.filterRepo,\n      clearFilter: this.clearFilter,\n      enterKeyPress: this.enterKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), DisplayRepo));\n  }\n\n}\n\nexport default GitRepo;","map":{"version":3,"sources":["/home/codebrahma/problems/Problems/src/problem2/GitRepo.js"],"names":["React","Component","classes","Search","GitRepo","state","userName","repoName","repos","repoNames","HasRepo","shouldClearRepo","shouldFilterRepo","userNotFound","changeUser","event","setState","target","value","searchUser","requestUrl","fetch","then","res","json","message","map","repo","name","clearUser","filterRepo","clearFilter","enterKeyPress","keyCode","which","console","log","render","DisplayRepo","displayRepo","wrongUserName","filter","includes","Display","regrex","RegExp","indices","result","exec","push","index","i","j","length","backgroundColor","substring","heading","Container"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\nclass GitRepo extends Component {\n  state = {\n    userName: \"\",\n    repoName: \"\",\n    repos: [],\n    repoNames: [],\n    HasRepo: false,\n    shouldClearRepo: false,\n    shouldFilterRepo: false,\n    userNotFound: false,\n  };\n  changeUser = event => {\n    this.setState({\n      userName: event.target.value,\n    });\n  };\n  searchUser = () => {\n    const requestUrl =\n      \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n    fetch(requestUrl)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          repos: json,\n        });\n        if (this.state.repos.message === \"Not Found\") {\n          this.setState({\n            HasRepo: false,\n            shouldClearRepo: false,\n            shouldFilterRepo: false,\n            userNotFound: true,\n          });\n          return;\n        }\n        let repoNames = this.state.repos.map(repo => {\n          return repo.name;\n        });\n        this.setState({\n          repoNames: repoNames,\n          HasRepo: true,\n          shouldClearRepo: false,\n          shouldFilterRepo: false,\n          userNotFound: false,\n        });\n      });\n  };\n  clearUser = () => {\n    this.setState({\n      userName: \"\",\n      repoNames:[],\n      shouldClearRepo: true,\n      HasRepo: false,\n      shouldFilterRepo: false,\n      userNotFound: false,\n    });\n  };\n  filterRepo = (event) => {\n    if(event.target.value===\"\"){\n      this.setState({\n      repoName: event.target.value,\n      shouldClearRepo: false,\n      HasRepo: true,\n      shouldFilterRepo: false,\n      userNotFound: false,\n    });  \n    }\n    else{\n    this.setState({\n      repoName: event.target.value,\n      shouldClearRepo: false,\n      HasRepo: false,\n      shouldFilterRepo: true,\n      userNotFound: false,\n    });\n    }\n  };\n  clearFilter=()=>{\n    this.setState({\n      repoName:\"\",\n      shouldClearRepo: false,\n      HasRepo: true,\n      shouldFilterRepo: true,\n      userNotFound: false\n    })\n  }\n  enterKeyPress=(event)=>{\n    if(event.keyCode===13||event.which===13){\n      console.log('here')\n       this.searchUser();\n     }\n  }\n  render() {\n    let DisplayRepo = \"\";\n    if (this.state.HasRepo) {                                        //Displaying the repos\n      DisplayRepo = this.state.repoNames.map(repo => {\n        return (\n          <p className={classes.displayRepo} key={repo}>\n            {repo}\n          </p>\n        );\n      });\n    }\n    if (this.state.shouldClearRepo) {                                 //clearing the repos\n      DisplayRepo = null;\n    }\n    if (this.state.userNotFound) {                                     //If userName does not exits\n      DisplayRepo = (\n        <p className={classes.wrongUserName}>No UserName Exits in This Name</p>\n      );\n    }\n    if (this.state.shouldFilterRepo) {                                   //Filtering the repos\n      let filter = this.state.repoName;\n      DisplayRepo = this.state.repoNames.map(repo => {\n        if (repo.includes(filter)) {\n            let Display =\"\";\n            let regrex=new RegExp(filter,\"g\")\n            let indices = [],result;\n            while ( (result = regrex.exec(repo)) ) {\n                  indices.push(result.index);\n              }\n\n            let i=0,j=filter.length;\n            for(i;i<repo.length;){\n                console.log(indices)\n                if(indices.includes(i)){\n                  Display=[Display,(<span style={{backgroundColor:\"green\"}}>{repo.substring(i,i+j)}</span>)]\n                  i=i+j;\n                }\n                else{\n                    Display=[Display,(<span>{repo[i]}</span>)]\n                    i=i+1;\n                }\n              }\n                 return (<div style={{backgroundColor:\"green\"}}>{Display}</div>);\n        } else {\n          return null;\n        }\n      });\n    }\n    return (\n      <div>\n        <h1 className={classes.heading}>Git Repository</h1>\n        <div className={classes.Container}>\n          <Search\n            userName={this.state.userName}\n            repoName={this.state.repoName}\n            changeUser={this.changeUser}\n            searchUser={this.searchUser}\n            clearUser={this.clearUser}\n            filterRepo={this.filterRepo}\n            clearFilter={this.clearFilter}\n            enterKeyPress={this.enterKeyPress}\n          />\n          {DisplayRepo}\n        </div>\n      </div>\n    );\n  }\n}\nexport default GitRepo;\n"]},"metadata":{},"sourceType":"module"}