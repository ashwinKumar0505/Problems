{"ast":null,"code":"var _jsxFileName = \"/home/codebrahma/problems/Problems/src/problem2/GitRepo.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\n\nclass GitRepo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      repoName: \"\",\n      repos: [],\n      HasRepo: false,\n      noRepo: false\n    };\n\n    this.changeUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.changeRepo = event => {\n      this.setState({\n        repoName: event.target.value\n      });\n    };\n\n    this.searchUser = () => {\n      const requestUrl = \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n      fetch(requestUrl).then(res => {\n        console.log(res);\n        return res.json();\n      }).then(json => {\n        this.setState({\n          repos: json,\n          HasRepo: true,\n          noRepo: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let DisplayRepo = \"\";\n\n    if (this.state.HasRepo) {\n      DisplayRepo = this.state.repos.map(repo => {\n        return React.createElement(\"p\", {\n          className: classes.displayRepo,\n          key: repo.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, repo.name);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Search, {\n      changeUser: this.changeUser,\n      changeRepo: this.changeRepo,\n      searchUser: this.searchUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), DisplayRepo);\n  }\n\n}\n\nexport default GitRepo;","map":{"version":3,"sources":["/home/codebrahma/problems/Problems/src/problem2/GitRepo.js"],"names":["React","Component","classes","Search","GitRepo","state","userName","repoName","repos","HasRepo","noRepo","changeUser","event","setState","target","value","changeRepo","searchUser","requestUrl","fetch","then","res","console","log","json","render","DisplayRepo","map","repo","displayRepo","name","Container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,MAAM,EAAC;AALD,KADsB;;AAAA,SAQ9BC,UAR8B,GAQjBC,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGD,KAZ6B;;AAAA,SAa9BC,UAb8B,GAajBJ,KAAK,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGD,KAjB6B;;AAAA,SAkB9BE,UAlB8B,GAkBjB,MAAM;AACjB,YAAMC,UAAU,GACd,kCAAkC,KAAKb,KAAL,CAAWC,QAA7C,GAAwD,QAD1D;AAEAa,MAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOA,GAAG,CAACG,IAAJ,EAAP;AAAkB,OAHtB,EAIGJ,IAJH,CAIQI,IAAI,IAAI;AACZ,aAAKX,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAEgB,IADK;AAEZf,UAAAA,OAAO,EAAE,IAFG;AAGZC,UAAAA,MAAM,EAAC;AAHK,SAAd;AAKD,OAVH;AAWD,KAhC6B;AAAA;;AAiC9Be,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAI,KAAKrB,KAAL,CAAWI,OAAf,EAAwB;AACtBiB,MAAAA,WAAW,GAAG,KAAKrB,KAAL,CAAWG,KAAX,CAAiBmB,GAAjB,CAAqBC,IAAI,IAAI;AACzC,eAAO;AAAG,UAAA,SAAS,EAAE1B,OAAO,CAAC2B,WAAtB;AAAmC,UAAA,GAAG,EAAED,IAAI,CAACE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoDF,IAAI,CAACE,IAAzD,CAAP;AACD,OAFa,CAAd;AAGD;;AACD,WACE;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,UAAU,EAAE,KAAKpB,UADnB;AAEE,MAAA,UAAU,EAAE,KAAKK,UAFnB;AAGE,MAAA,UAAU,EAAE,KAAKC,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGS,WANH,CADF;AAUD;;AAlD6B;;AAqDhC,eAAetB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./GitRepo.module.css\";\nimport Search from \"./Search\";\nclass GitRepo extends Component {\n  state = {\n    userName: \"\",\n    repoName: \"\",\n    repos: [],\n    HasRepo: false,\n    noRepo:false\n  };\n  changeUser = event => {\n    this.setState({\n      userName: event.target.value,\n    });\n  };\n  changeRepo = event => {\n    this.setState({\n      repoName: event.target.value,\n    });\n  };\n  searchUser = () => {\n    const requestUrl =\n      \"https://api.github.com/users/\" + this.state.userName + \"/repos\";\n    fetch(requestUrl)\n      .then(res => {\n        console.log(res)\n        return res.json()})\n      .then(json => {\n        this.setState({\n          repos: json,\n          HasRepo: true,\n          noRepo:false\n        });\n      });\n  };\n  render() {\n    let DisplayRepo = \"\";\n    if (this.state.HasRepo) {\n      DisplayRepo = this.state.repos.map(repo => {\n        return <p className={classes.displayRepo} key={repo.name}>{repo.name}</p>;\n      });\n    }\n    return (\n      <div className={classes.Container}>\n        <Search\n          changeUser={this.changeUser}\n          changeRepo={this.changeRepo}\n          searchUser={this.searchUser}\n        />\n        {DisplayRepo}\n      </div>\n    );\n  }\n}\n\nexport default GitRepo;\n"]},"metadata":{},"sourceType":"module"}